// prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  price       Float
  image       String    // Thumbnail image
  modelUrl    String    // Path to 3D .glb file
  createdAt   DateTime  @default(now())
}

model Order {
  id           Int      @id @default(autoincrement())
  userId       String   // ðŸ”‘ Foreign key to User
  user         User     @relation(fields: [userId], references: [id]) // ðŸ”— Relation
  userName     String
  email        String
  total        Float
  orderDetails String   // JSON stringified cart items
  createdAt    DateTime @default(now())
}

model User {
  id            String   @id @default(cuid())
  name          String?
  email         String?  @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  orders        Order[] // ðŸ‘ˆ Add this reverse relation
}


model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?

  user User @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime

  user User @relation(fields: [userId], references: [id])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
